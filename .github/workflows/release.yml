name: Build and Package Extensions

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install  # Assurez-vous que votre projet a un package.json contenant les dépendances nécessaires.

      - name: Build Firefox Extension
        run: |
          mkdir -p ${{ env.FIREFOX_OUTPUT_DIR }}
          cd ${{ env.FIREFOX_EXTENSION_DIR }}
          zip -r ../${{ env.FIREFOX_OUTPUT_DIR }}/${{ github.event.repository.name }}.xpi *
        env:
          FIREFOX_EXTENSION_DIR: "firefox"
          FIREFOX_OUTPUT_DIR: "dist/firefox"

      - name: Create Chrome Directory
        run: |
          mkdir -p ${{ env.CHROME_OUTPUT_DIR }}
          cd ${{ env.CHROME_EXTENSION_DIR }}
          zip -r ../${{ env.CHROME_OUTPUT_DIR }}/${{ github.event.repository.name }}.zip *
        env:
          CHROME_EXTENSION_DIR: "chrome"
          CHROME_OUTPUT_DIR: "dist/chrome"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Ce token est fourni par Actions, vous n'avez pas besoin de créer votre propre token
          tag: ${{ github.ref_name }} # Utiliser github.ref_name à la place de github.ref
        with:
          tag_name: ${{ env.tag }}
          release_name: Release ${{ env.tag }}
          draft: false
          prerelease: false

      - name: Upload Firefox Extension to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Cela provient de l'étape de création de la Release
          asset_path: ./dist/firefox/${{ github.event.repository.name }}.xpi
          asset_name: ${{ github.event.repository.name }}.xpi
          asset_content_type: application/x-xpinstall

      - name: Upload Chrome Extension to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Cela provient de l'étape de création de la Release
          asset_path: ./dist/chrome/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip